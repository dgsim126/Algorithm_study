"""
뭔가 수학으로 문제 풀 수 있을 것 같이 생김
각 위치에서의 점이 뭔가 등비, 등차로 커질 거 같음
8 > 16 > 20 > 28 ... 규칙이 없는 듯(이렇게 푸는 거 아닌 것 같음)

원점과의 거리를 활용하는 방법을 사용해야 할 것 같은데 각 좌표마다 원점과의 거리를 구하고
그 거리가 두 원 사이의 거리인지 확인해야 할 거 같음 -> 이때 효율을 어떻게 챙기지?
역시 절반의 경우에서 시간초과가 나온다. 아예 계산할 필요 없는 부분을 어떻게 찾지?
그냥 한 사분면만 찾은 후 *4하면 되잖아 병신아
이 방법이 아닌 것 같다. 예를 들어 원이 어마어마하게 큰 경우 계산이 복잡해짐
무조건 되는 하나의 포인트에서 한 칸 씩 이동하며 문제를 풀어야 하나?

"""


def solution(r1, r2):
    min_distance= r1**2
    max_distance= r2**2
    # print(min_distance, max_distance)

    cnt= 0
    x= 0
    y= r2

    # 1사분면만 계산해보자!
    while(True):
        if(x**2 + y**2)

## main ##
r1= 2
r2= 3
print(solution(r1, r2))